{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonalkethaka/Documents/WebStorm/schoolify/src/app/schoolifylanding/components/NavbarComponent.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport {\n    Navbar,\n    NavbarBrand,\n    NavbarContent,\n    NavbarItem,\n    Link,\n    Button,\n    Modal,\n    ModalContent,\n    ModalBody,\n    useDisclosure,\n} from \"@nextui-org/react\";\n\nexport const AcmeLogo = () => (\n    <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n        <path\n            clipRule=\"evenodd\"\n            d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n        />\n    </svg>\n);\n\nexport default function NavbarComponent() {\n    const [active, setActive] = useState(\"\"); // Track active link\n    // const [menuOpen, setMenuOpen] = useState(false); // Track mobile menu state\n    const navLinks = [\"Features\", \"About Us\", \"Team\"]; // Common sections\n    const { isOpen, onOpen, onClose } = useDisclosure(); // For mobile modal menu\n\n\n    const handleScroll = (id) => {\n        const element = document.getElementById(id);\n        if (element) {\n            element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n        }\n    };\n\n    useEffect(() => {\n        const sections = navLinks.map((link) =>\n            document.getElementById(link.toLowerCase().replace(\" \", \"-\"))\n        );\n\n        const observerOptions = {\n            root: null, // Use the viewport as the root\n            threshold: 0.2, // Section must be 60% in view to activate\n        };\n\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    setActive(\n                        navLinks.find(\n                            (link) => link.toLowerCase().replace(\" \", \"-\") === entry.target.id\n                        )\n                    );\n                } else {\n                    const leavingSection = navLinks.find(\n                        (link) =>\n                            link.toLowerCase().replace(\" \", \"-\") === entry.target.id\n                    );\n                    if (leavingSection === active) {\n                        setActive(\"\");\n                    }\n                }\n            });\n        }, observerOptions);\n\n        // Observe each section\n        sections.forEach((section) => {\n            if (section) observer.observe(section);\n        });\n\n        return () => {\n            sections.forEach((section) => {\n                if (section) observer.unobserve(section);\n            });\n        };\n    }, [navLinks, active]);\n\n    return (\n        <>\n            <Navbar\n                className=\"bg-[#FCF8F1] bg-opacity-30 text-black shadow-md  \"\n                isBordered\n                shouldHideOnScroll\n            >\n                {/* Brand */}\n                <NavbarBrand>\n                    <Link\n                        className=\"font-bold text-black\"\n                        href=\"#\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            window.scrollTo({\n                                top: 0,\n                                behavior: \"smooth\",\n                            });\n                        }}\n                    >\n                        <AcmeLogo />\n                        <p>Schoolify</p>\n                    </Link>\n                </NavbarBrand>\n\n                {/* Desktop Links */}\n                <NavbarContent justify=\"center\" className=\"hidden sm:flex\">\n                    {navLinks.map((link) => (\n                        <NavbarItem key={link}>\n                            <Link\n                                href={`#${link.toLowerCase().replace(\" \", \"-\")}`}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    setActive(link);\n                                    handleScroll(link.toLowerCase().replace(\" \", \"-\"));\n                                }}\n                                className={`relative ${\n                                    active === link\n                                        ? \"text-black font-bold\"\n                                        : \"text-gray-600 font-normal\"\n                                }`}\n                            >\n                                {link}\n                                {/* Underline Bar */}\n                                <span\n                                    className={`absolute bottom-0 left-1/2 transform -translate-x-1/2 h-[2px] w-6 bg-black rounded ${\n                                        active === link ? \"block\" : \"hidden\"\n                                    }`}\n                                ></span>\n                            </Link>\n                        </NavbarItem>\n                    ))}\n                </NavbarContent>\n\n                {/* Login & Signup */}\n                <NavbarContent justify=\"end\" className=\"hidden sm:flex\">\n                    <NavbarItem>\n                        <Link href=\"#\">Login</Link>\n                    </NavbarItem>\n                    <NavbarItem>\n                        <Button as={Link} href=\"#\" color=\"primary\" variant=\"flat\">\n                            Sign Up\n                        </Button>\n                    </NavbarItem>\n                </NavbarContent>\n\n                {/* Hamburger Menu (Mobile) */}\n                <NavbarContent className=\"sm:hidden flex items-center justify-end\">\n                    <Button\n                        isIconOnly\n                        variant=\"light\"\n                        // onClick={() => setMenuOpen(!menuOpen)}\n                        // aria-label=\"Toggle menu\"\n                        className=\"ml-24\"\n                        onPress={onOpen}\n                        aria-label=\"Open menu\"\n                    >\n\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            strokeWidth=\"1.5\"\n                            stroke=\"currentColor\"\n                            className=\"w-6 h-6\"\n                        >\n\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                d=\"M4.5 12h15M4.5 6h15M4.5 18h15\"\n                            />\n                        </svg>\n\n                    </Button>\n                </NavbarContent>\n            </Navbar>\n\n            {/* Mobile Menu */}\n            <Modal\n                backdrop=\"blur\"\n                isOpen={isOpen}\n                onClose={onClose}\n                className=\"absolute top-4 right-4 w-full max-w-xs sm:max-w-sm md:max-w-md lg:max-w-lg\" // Position the modal at the top-right\n                placement=\"top-right\" // Enforce top-right placement\n            >\n                <ModalContent>\n                    {(onClose) => (\n                        <>\n                            {/* Close Icon */}\n                            <button\n                                className=\"absolute top-2 right-2 text-gray-400 hover:text-black\"\n                                onClick={onClose}\n                                aria-label=\"Close\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    fill=\"none\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"2\"\n                                    stroke=\"currentColor\"\n                                    className=\"w-6 h-6\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        d=\"M6 18L18 6M6 6l12 12\"\n                                    />\n                                </svg>\n                            </button>\n\n                            <ModalBody>\n                                <div className=\"flex flex-col items-center gap-4\">\n                                    {navLinks.map((link) => (\n                                        <Link\n                                            key={link}\n                                            href={`#${link.toLowerCase().replace(\" \", \"-\")}`}\n                                            onPress={() => {\n                                                setActive(link); // Update the active link\n                                                handleScroll(link.toLowerCase().replace(\" \", \"-\")); // Scroll to the section\n                                                onClose(); // Close the modal\n                                            }}\n                                            className={`relative ${\n                                                active === link\n                                                    ? \"text-black font-bold\"\n                                                    : \"text-gray-600 font-normal\"\n                                            }`}\n                                        >\n                                            {link}\n                                            <span\n                                                className={`absolute bottom-0 left-1/2 transform -translate-x-1/2 h-[2px] w-6 bg-black rounded ${\n                                                    active === link ? \"block\" : \"hidden\"\n                                                }`}\n                                            ></span>\n                                        </Link>\n                                    ))}\n                                    <div className=\"flex flex-col items-center gap-2\">\n                                        <Link href=\"#\" className=\"text-gray-600\">\n                                            Login\n                                        </Link>\n                                        <Button as={Link} href=\"#\" color=\"primary\" variant=\"flat\">\n                                            Sign Up\n                                        </Button>\n                                    </div>\n                                </div>\n                            </ModalBody>\n                        </>\n                    )}\n                </ModalContent>\n            </Modal>\n        </>\n    );\n}"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAaO,MAAM,WAAW,kBACpB,8OAAC;QAAI,MAAK;QAAO,QAAO;QAAK,SAAQ;QAAY,OAAM;kBACnD,cAAA,8OAAC;YACG,UAAS;YACT,GAAE;YACF,MAAK;YACL,UAAS;;;;;;;;;;;AAKN,SAAS;IACpB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,oBAAoB;IAC9D,8EAA8E;IAC9E,MAAM,WAAW;QAAC;QAAY;QAAY;KAAO,EAAE,kBAAkB;IACrE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,sKAAA,CAAA,gBAAa,AAAD,KAAK,wBAAwB;IAG7E,MAAM,eAAe,CAAC;QAClB,MAAM,UAAU,SAAS,cAAc,CAAC;QACxC,IAAI,SAAS;YACT,QAAQ,cAAc,CAAC;gBAAE,UAAU;gBAAU,OAAO;YAAQ;QAChE;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,WAAW,SAAS,GAAG,CAAC,CAAC,OAC3B,SAAS,cAAc,CAAC,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK;QAG5D,MAAM,kBAAkB;YACpB,MAAM;YACN,WAAW;QACf;QAEA,MAAM,WAAW,IAAI,qBAAqB,CAAC;YACvC,QAAQ,OAAO,CAAC,CAAC;gBACb,IAAI,MAAM,cAAc,EAAE;oBACtB,UACI,SAAS,IAAI,CACT,CAAC,OAAS,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK,SAAS,MAAM,MAAM,CAAC,EAAE;gBAG9E,OAAO;oBACH,MAAM,iBAAiB,SAAS,IAAI,CAChC,CAAC,OACG,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK,SAAS,MAAM,MAAM,CAAC,EAAE;oBAEhE,IAAI,mBAAmB,QAAQ;wBAC3B,UAAU;oBACd;gBACJ;YACJ;QACJ,GAAG;QAEH,uBAAuB;QACvB,SAAS,OAAO,CAAC,CAAC;YACd,IAAI,SAAS,SAAS,OAAO,CAAC;QAClC;QAEA,OAAO;YACH,SAAS,OAAO,CAAC,CAAC;gBACd,IAAI,SAAS,SAAS,SAAS,CAAC;YACpC;QACJ;IACJ,GAAG;QAAC;QAAU;KAAO;IAErB,qBACI;;0BACI,8OAAC,mNAAA,CAAA,SAAM;gBACH,WAAU;gBACV,UAAU;gBACV,kBAAkB;;kCAGlB,8OAAC,8NAAA,CAAA,cAAW;kCACR,cAAA,8OAAC,6MAAA,CAAA,OAAI;4BACD,WAAU;4BACV,MAAK;4BACL,SAAS,CAAC;gCACN,EAAE,cAAc;gCAChB,OAAO,QAAQ,CAAC;oCACZ,KAAK;oCACL,UAAU;gCACd;4BACJ;;8CAEA,8OAAC;;;;;8CACD,8OAAC;8CAAE;;;;;;;;;;;;;;;;;kCAKX,8OAAC,kOAAA,CAAA,gBAAa;wBAAC,SAAQ;wBAAS,WAAU;kCACrC,SAAS,GAAG,CAAC,CAAC,qBACX,8OAAC,4NAAA,CAAA,aAAU;0CACP,cAAA,8OAAC,6MAAA,CAAA,OAAI;oCACD,MAAM,CAAC,CAAC,EAAE,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK,MAAM;oCAChD,SAAS,CAAC;wCACN,EAAE,cAAc;wCAChB,UAAU;wCACV,aAAa,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK;oCACjD;oCACA,WAAW,CAAC,SAAS,EACjB,WAAW,OACL,yBACA,6BACR;;wCAED;sDAED,8OAAC;4CACG,WAAW,CAAC,mFAAmF,EAC3F,WAAW,OAAO,UAAU,UAC9B;;;;;;;;;;;;+BAnBG;;;;;;;;;;kCA2BzB,8OAAC,kOAAA,CAAA,gBAAa;wBAAC,SAAQ;wBAAM,WAAU;;0CACnC,8OAAC,4NAAA,CAAA,aAAU;0CACP,cAAA,8OAAC,6MAAA,CAAA,OAAI;oCAAC,MAAK;8CAAI;;;;;;;;;;;0CAEnB,8OAAC,4NAAA,CAAA,aAAU;0CACP,cAAA,8OAAC,mNAAA,CAAA,SAAM;oCAAC,IAAI,6MAAA,CAAA,OAAI;oCAAE,MAAK;oCAAI,OAAM;oCAAU,SAAQ;8CAAO;;;;;;;;;;;;;;;;;kCAOlE,8OAAC,kOAAA,CAAA,gBAAa;wBAAC,WAAU;kCACrB,cAAA,8OAAC,mNAAA,CAAA,SAAM;4BACH,UAAU;4BACV,SAAQ;4BACR,yCAAyC;4BACzC,2BAA2B;4BAC3B,WAAU;4BACV,SAAS;4BACT,cAAW;sCAGX,cAAA,8OAAC;gCACG,OAAM;gCACN,MAAK;gCACL,SAAQ;gCACR,aAAY;gCACZ,QAAO;gCACP,WAAU;0CAGV,cAAA,8OAAC;oCACG,eAAc;oCACd,gBAAe;oCACf,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAStB,8OAAC,gNAAA,CAAA,QAAK;gBACF,UAAS;gBACT,QAAQ;gBACR,SAAS;gBACT,WAAU,6EAA6E,sCAAsC;;gBAC7H,WAAU,YAAY,8BAA8B;;0BAEpD,cAAA,8OAAC,+NAAA,CAAA,eAAY;8BACR,CAAC,wBACE;;8CAEI,8OAAC;oCACG,WAAU;oCACV,SAAS;oCACT,cAAW;8CAEX,cAAA,8OAAC;wCACG,OAAM;wCACN,MAAK;wCACL,SAAQ;wCACR,aAAY;wCACZ,QAAO;wCACP,WAAU;kDAEV,cAAA,8OAAC;4CACG,eAAc;4CACd,gBAAe;4CACf,GAAE;;;;;;;;;;;;;;;;8CAKd,8OAAC,yNAAA,CAAA,YAAS;8CACN,cAAA,8OAAC;wCAAI,WAAU;;4CACV,SAAS,GAAG,CAAC,CAAC,qBACX,8OAAC,6MAAA,CAAA,OAAI;oDAED,MAAM,CAAC,CAAC,EAAE,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK,MAAM;oDAChD,SAAS;wDACL,UAAU,OAAO,yBAAyB;wDAC1C,aAAa,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK,OAAO,wBAAwB;wDAC5E,WAAW,kBAAkB;oDACjC;oDACA,WAAW,CAAC,SAAS,EACjB,WAAW,OACL,yBACA,6BACR;;wDAED;sEACD,8OAAC;4DACG,WAAW,CAAC,mFAAmF,EAC3F,WAAW,OAAO,UAAU,UAC9B;;;;;;;mDAjBD;;;;;0DAqBb,8OAAC;gDAAI,WAAU;;kEACX,8OAAC,6MAAA,CAAA,OAAI;wDAAC,MAAK;wDAAI,WAAU;kEAAgB;;;;;;kEAGzC,8OAAC,mNAAA,CAAA,SAAM;wDAAC,IAAI,6MAAA,CAAA,OAAI;wDAAE,MAAK;wDAAI,OAAM;wDAAU,SAAQ;kEAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYlG"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}