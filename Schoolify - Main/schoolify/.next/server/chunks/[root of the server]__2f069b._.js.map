{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonalkethaka/Documents/GitHub/SDGP-Schoolify/Schoolify%20-%20Main/schoolify/lib/auth/db.js"],"sourcesContent":["import { Pool } from 'pg';\n\n// Create a new pool instance to manage PostgreSQL connections\nconst pool = new Pool({\n    connectionString: process.env.DATABASE_URL, // Ensure this is set in .env.local\n    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false, // Optional for production\n});\n\nexport const query = async (text, params) => {\n    const client = await pool.connect();\n    try {\n        const result = await client.query(text, params);\n        return result;\n    } finally {\n        client.release();\n    }\n};"],"names":[],"mappings":";;;AAAA;;AAEA,8DAA8D;AAC9D,MAAM,OAAO,IAAI,6FAAA,CAAA,OAAI,CAAC;IAClB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;IAC1C,KAAK,6EAAwE;AACjF;AAEO,MAAM,QAAQ,OAAO,MAAM;IAC9B,MAAM,SAAS,MAAM,KAAK,OAAO;IACjC,IAAI;QACA,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,MAAM;QACxC,OAAO;IACX,SAAU;QACN,OAAO,OAAO;IAClB;AACJ"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonalkethaka/Documents/GitHub/SDGP-Schoolify/Schoolify%20-%20Main/schoolify/pages/api/auth/login.js"],"sourcesContent":["import bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport { query } from '../../../lib/auth/db';\n\nexport default async function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({ message: 'Method Not Allowed' });\n    }\n\n    const { email, password, role } = req.body;\n\n    // Ensure role is valid\n    if (!['student', 'parent', 'teacher'].includes(role)) {\n        return res.status(400).json({ message: 'Invalid role selected' });\n    }\n\n    try {\n        // Dynamically select the correct table based on role\n        const table = role;\n        const userQuery = `SELECT * FROM ${table} WHERE email = $1`;\n        const result = await query(userQuery, [email]);\n\n        if (result.rows.length === 0) {\n            return res.status(401).json({ message: 'Invalid email ' });\n        }\n\n        const user = result.rows[0];\n        console.log(user);\n\n        // Compare hashed password\n        const isValidPassword = await bcrypt.compare(password, user.password);\n        if (!isValidPassword) {\n            return res.status(401).json({ message: 'Invalid password' });\n        }\n\n\n        // Generate JWT token\n        const token = jwt.sign(\n            { id: user.id, email: user.email, role },\n            process.env.JWT_SECRET,\n            { expiresIn: '1h' }\n        );\n\n        res.status(200).json({ message: 'Login successful', token, role });\n    } catch (error) {\n        res.status(500).json({ message: 'Invalid Username or Password', error });\n    }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC1C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACvB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAqB;IAChE;IAEA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI;IAE1C,uBAAuB;IACvB,IAAI,CAAC;QAAC;QAAW;QAAU;KAAU,CAAC,QAAQ,CAAC,OAAO;QAClD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAwB;IACnE;IAEA,IAAI;QACA,qDAAqD;QACrD,MAAM,QAAQ;QACd,MAAM,YAAY,CAAC,cAAc,EAAE,MAAM,iBAAiB,CAAC;QAC3D,MAAM,SAAS,MAAM,CAAA,GAAA,0GAAA,CAAA,QAAK,AAAD,EAAE,WAAW;YAAC;SAAM;QAE7C,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,GAAG;YAC1B,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAiB;QAC5D;QAEA,MAAM,OAAO,OAAO,IAAI,CAAC,EAAE;QAC3B,QAAQ,GAAG,CAAC;QAEZ,0BAA0B;QAC1B,MAAM,kBAAkB,MAAM,yGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QACpE,IAAI,CAAC,iBAAiB;YAClB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAmB;QAC9D;QAGA,qBAAqB;QACrB,MAAM,QAAQ,iHAAA,CAAA,UAAG,CAAC,IAAI,CAClB;YAAE,IAAI,KAAK,EAAE;YAAE,OAAO,KAAK,KAAK;YAAE;QAAK,GACvC,QAAQ,GAAG,CAAC,UAAU,EACtB;YAAE,WAAW;QAAK;QAGtB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAoB;YAAO;QAAK;IACpE,EAAE,OAAO,OAAO;QACZ,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAgC;QAAM;IAC1E;AACJ"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonalkethaka/Documents/GitHub/SDGP-Schoolify/Schoolify%20-%20Main/schoolify/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonalkethaka/Documents/GitHub/SDGP-Schoolify/Schoolify%20-%20Main/schoolify/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonalkethaka/Documents/GitHub/SDGP-Schoolify/Schoolify%20-%20Main/schoolify/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonalkethaka/Documents/GitHub/SDGP-Schoolify/Schoolify%20-%20Main/schoolify/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,wHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,wHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}